#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define BASE 0
#define LOWER 1
#define RAISE 2

/ {
    behaviors {
        td_shft_spc: td_shft_spc {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt LSHIFT SPACE>, <&kp SPACE>;
        };
        td_raise_ret: td_raise_ret {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&lt RAISE RET>, <&kp RET>;
        };
        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;
            tap-ms = <20>;
        };
        scroll_left_right: behavior_sensor_rotate_mouse_wheel_left_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;
            tap-ms = <20>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_lparenthesis {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&kp LS(N9)>;
        };
        combo_rparenthesis {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp LS(N0)>;
        };
        combo_lbrace {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp LS(LBKT)>;
        };
        combo_rbrace {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp LS(RBKT)>;
        };
        combo_lbracket {
            timeout-ms = <50>;
            key-positions = <43 44>;
            bindings = <&kp LBKT>;
        };
        combo_rbracket {
            timeout-ms = <50>;
            key-positions = <44 45>;
            bindings = <&kp RBKT>;
        };
        combo_plus {
            timeout-ms = <50>;
            key-positions = <38 39>;
            bindings = <&kp LS(EQUAL)>;
        };
        combo_equal {
            timeout-ms = <50>;
            key-positions = <39 40>;
            bindings = <&kp EQUAL>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
// ---------------------------------------------------------------------------------------------------------------------------
// |  `   |  1  |   2  |  3  |  4  |    5    |                                       |   6   |  7  |  8  |   9  |  0  |   -  |
// | TAB  |  Q  |   W  |  E  |  R  |    T    |                                       |   Y   |  U  |  I  |   O  |  P  |   \  |
// | ESC  |  A  |   S  |  D  |  F  |    G    |                                       |   H   |  J  |  K  |   L  |  ;  |   '  |
// | CTRL |  Z  |   X  |  C  |  V  |    B    | MUTE |                         |  PP  |   N   |  M  |  ,  |   .  |  /  | SHFT |
//              | CAPS | ALT | GUI | 1/SPACE | SHFT |                         | BKSP | 2/RET | GUI | ALT | CTRL |
            bindings = <
&kp GRAVE    &kp N1 &kp N2   &kp N3   &kp N4   &kp N5                                  &kp N6        &kp N7   &kp N8    &kp N9   &kp N0   &kp MINUS
&kp LCTRL    &kp Q  &kp W    &kp E    &kp R    &kp T                                   &kp Y         &kp U    &kp I     &kp O    &kp P    &kp BSLH
&mt LGUI ESC &kp A  &kp S    &kp D    &kp F    &kp G                                   &kp H         &kp J    &kp K     &kp L    &kp SEMI &kp SQT
&kp LBKT     &kp Z  &kp X    &kp C    &kp V    &kp B         &kp C_MUTE       &kp C_PP &kp N         &kp M    &kp COMMA &kp DOT  &kp FSLH &kp RBKT
                    &kp CAPS &kp LALT &kp LGUI &lt LOWER TAB &td_shft_spc     &kp BSPC &lt RAISE RET &kp LGUI &kp LALT  &kp LCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &scroll_up_down>;
        };

        lower_layer {
            display-name = "lower";
// -----------------------------------------------------------------------------------------------------------------------------
// |    |  F1 |  F2 |  F3  |  F4  |  F5 |                                        |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |    |  !  |  @  |  #   |  $   |  %  |                                        |   1  |   2   |   3   |   4  |   5   |  F12  |
// |    |  ^  |  &  |  *   |  (   |  )  |                                        |   6  |   7   |   8   |   9  |   0   |       |
// |    |     |     |      |      |     |        |                       |       |      |       |       |      |       |       |
//            |     |      |      |     |        |                       |       |      |       |       |      |
            bindings = <
&trans  &kp F1     &kp F2     &kp F3     &kp F4     &kp F5                       &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11
&trans  &kp LS(N1) &kp LS(N2) &kp LS(N3) &kp LS(N4) &kp LS(N5)                   &kp N1 &kp N2 &kp N3 &kp N4 &kp N5  &kp F12
&kp ESC &kp LS(N6) &kp LS(N7) &kp LS(N8) &kp LS(N9) &kp LS(N0)                   &kp N6 &kp N7 &kp N8 &kp N9 &kp N0  &trans
&trans  &trans     &trans     &trans     &trans     &trans     &trans     &trans &trans &trans &trans &trans &trans  &trans
                   &trans     &trans     &trans     &trans     &trans     &trans &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &scroll_left_right>;
        };

        raise_layer {
            display-name = "raise";
// ------------------------------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                                            |      | BRUP | BRDN |      |    |       |
// |       |      |      |       |       |      |                                            | HOME | PGDN | PGUP |  END |    | BKSPC |
// |       | CTRL | ALT  |  GUI  | SHIFT |      |                                            |  <-  |   v  |   ^  |  ->  |    |       |
// |       |      |      |       |       |      |      |                              |      | PREV |  PP  |  PP  | NEXT |    |       |
//                |      |       |       |      |      |                              |      |      |      |      |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                    &trans     &kp C_BRI_UP  &kp C_BRI_DN  &trans     &trans  &trans
&trans     &trans       &trans       &trans       &trans       &trans                          &kp HOME   &kp PG_DN     &kp PG_UP     &kp END    &trans  &kp BSPC
&trans     &kp LCTRL    &kp LALT     &kp LGUI     &kp LSHFT    &trans                          &kp LEFT   &kp DOWN      &kp UP        &kp RIGHT  &trans  &trans
&trans     &trans       &trans       &trans       &trans       &trans        &trans    &trans  &kp C_PREV &kp C_PP      &kp C_PP      &kp C_NEXT &trans  &trans
                        &kp LCTRL    &trans       &trans       &trans        &trans    &trans  &trans     &trans        &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &scroll_up_down>;
        };

        extra1 {
            status = "reserved";
        };

        extra2 {
            status = "reserved";
        };
    };
};
